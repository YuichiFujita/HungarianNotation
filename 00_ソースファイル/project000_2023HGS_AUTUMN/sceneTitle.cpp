//============================================================
//
//	タイトル画面処理 [sceneTitle.cpp]
//	Author：藤田勇一
//
//============================================================
//************************************************************
//	インクルードファイル
//************************************************************
#include "sceneTitle.h"
#include "manager.h"
#include "texture.h"
#include "input.h"
#include "sound.h"
#include "titleManager.h"
#include "stage.h"

//************************************************************
//	静的メンバ変数宣言
//************************************************************
CTitleManager *CSceneTitle::m_pTitleManager = NULL;	// タイトルマネージャー

//************************************************************
//	子クラス [CSceneTitle] のメンバ関数
//************************************************************
//============================================================
//	コンストラクタ
//============================================================
CSceneTitle::CSceneTitle(const MODE mode) : CScene(mode)
{

}

//============================================================
//	デストラクタ
//============================================================
CSceneTitle::~CSceneTitle()
{

}

//============================================================
//	初期化処理
//============================================================
HRESULT CSceneTitle::Init(void)
{
	// ポインタを宣言
	CTexture *pTexture = CManager::GetTexture();	// テクスチャへのポインタ

	//--------------------------------------------------------
	//	タイトルの初期化
	//--------------------------------------------------------
	// タイトルマネージャーの生成
	m_pTitleManager = CTitleManager::Create();
	if (m_pTitleManager == NULL)
	{ // 非使用中の場合

		// 失敗を返す
		assert(false);
		return E_FAIL;
	}

	// シーンの初期化
	CScene::Init();

	//--------------------------------------------------------
	//	初期設定
	//--------------------------------------------------------
	// BGMの再生
	CManager::GetSound()->Play(CSound::LABEL_BGM_TITLE_RESULT);

	// 成功を返す
	return S_OK;
}

//============================================================
//	終了処理
//============================================================
HRESULT CSceneTitle::Uninit(void)
{
	// タイトルマネージャーの破棄
	if (FAILED(CTitleManager::Release(m_pTitleManager)))
	{ // 破棄に失敗した場合

		// 失敗を返す
		assert(false);
		return E_FAIL;
	}

	// シーンの終了
	CScene::Uninit();

	// 成功を返す
	return S_OK;
}

//============================================================
//	更新処理
//============================================================
void CSceneTitle::Update(void)
{
	if (m_pTitleManager != NULL)
	{ // 使用中の場合

		// タイトルマネージャーの更新
		m_pTitleManager->Update();
	}
	else { assert(false); }	// 非使用中

	// シーンの更新
	CScene::Update();
}

//============================================================
//	描画処理
//============================================================
void CSceneTitle::Draw(void)
{

}

//============================================================
//	タイトルマネージャー取得処理
//============================================================
CTitleManager *CSceneTitle::GetTitleManager(void)
{
	// タイトルマネージャーを返す
	return m_pTitleManager;
}
